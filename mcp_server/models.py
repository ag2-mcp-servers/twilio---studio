# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:12:56+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, BaseModel, Field, constr


class ExecutionEnumStatus(Enum):
    active = 'active'
    ended = 'ended'


class FlowEnumStatus(Enum):
    draft = 'draft'
    published = 'published'


class FlowRevisionEnumStatus(Enum):
    draft = 'draft'
    published = 'published'


class FlowValidateEnumStatus(Enum):
    draft = 'draft'
    published = 'published'


class StudioV2Flow(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.',
    )
    commit_message: Optional[str] = Field(
        None, description='Description of change made in the revision.'
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    definition: Optional[Any] = Field(
        None, description='JSON representation of flow definition.'
    )
    errors: Optional[List] = Field(
        None, description='List of error in the flow definition.'
    )
    friendly_name: Optional[str] = Field(
        None, description='The string that you assigned to describe the Flow.'
    )
    links: Optional[Dict[str, Any]] = Field(
        None, description="The URLs of the Flow's nested resources."
    )
    revision: Optional[int] = Field(
        None, description="The latest revision number of the Flow's definition."
    )
    sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Flow resource.',
    )
    status: Optional[FlowEnumStatus] = Field(
        None, description='The status of the Flow. Can be: `draft` or `published`.'
    )
    url: Optional[AnyUrl] = Field(None, description='The absolute URL of the resource.')
    valid: Optional[bool] = Field(
        None, description='Boolean if the flow definition is valid.'
    )
    warnings: Optional[List] = Field(
        None, description='List of warnings in the flow definition.'
    )
    webhook_url: Optional[AnyUrl] = None


class StudioV2FlowExecution(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.',
    )
    contact_channel_address: Optional[str] = Field(
        None,
        description='The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.',
    )
    context: Optional[Any] = Field(
        None,
        description="The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    flow_sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Flow.')
    links: Optional[Dict[str, Any]] = Field(
        None, description='The URLs of nested resources.'
    )
    sid: Optional[
        constr(pattern=r'^FN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Execution resource.',
    )
    status: Optional[ExecutionEnumStatus] = Field(
        None, description='The status of the Execution. Can be: `active` or `ended`.'
    )
    url: Optional[AnyUrl] = Field(None, description='The absolute URL of the resource.')


class StudioV2FlowExecutionExecutionContext(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionContext resource.',
    )
    context: Optional[Any] = Field(
        None,
        description="The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
    )
    execution_sid: Optional[
        constr(pattern=r'^FN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description="The SID of the context's Execution resource.")
    flow_sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Flow.')
    url: Optional[AnyUrl] = Field(None, description='The absolute URL of the resource.')


class StudioV2FlowExecutionExecutionStep(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStep resource.',
    )
    context: Optional[Any] = Field(
        None,
        description="The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    execution_sid: Optional[
        constr(pattern=r'^FN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description="The SID of the Step's Execution resource.")
    flow_sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Flow.')
    links: Optional[Dict[str, Any]] = Field(
        None, description='The URLs of related resources.'
    )
    name: Optional[str] = Field(
        None, description='The event that caused the Flow to transition to the Step.'
    )
    sid: Optional[
        constr(pattern=r'^FT[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the ExecutionStep resource.',
    )
    transitioned_from: Optional[str] = Field(
        None, description='The Widget that preceded the Widget for the Step.'
    )
    transitioned_to: Optional[str] = Field(
        None, description='The Widget that will follow the Widget for the Step.'
    )
    url: Optional[AnyUrl] = Field(None, description='The absolute URL of the resource.')


class StudioV2FlowExecutionExecutionStepExecutionStepContext(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStepContext resource.',
    )
    context: Optional[Any] = Field(
        None,
        description="The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
    )
    execution_sid: Optional[
        constr(pattern=r'^FN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description="The SID of the context's Execution resource.")
    flow_sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The SID of the Flow.')
    step_sid: Optional[
        constr(pattern=r'^FT[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None, description='The SID of the Step that the context is associated with.'
    )
    url: Optional[AnyUrl] = Field(None, description='The absolute URL of the resource.')


class StudioV2FlowFlowRevision(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.',
    )
    commit_message: Optional[str] = Field(
        None, description='Description of change made in the revision.'
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    definition: Optional[Any] = Field(
        None, description='JSON representation of flow definition.'
    )
    errors: Optional[List] = Field(
        None, description='List of error in the flow definition.'
    )
    friendly_name: Optional[str] = Field(
        None, description='The string that you assigned to describe the Flow.'
    )
    revision: Optional[int] = Field(
        None, description="The latest revision number of the Flow's definition."
    )
    sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the Flow resource.',
    )
    status: Optional[FlowRevisionEnumStatus] = Field(
        None, description='The status of the Flow. Can be: `draft` or `published`.'
    )
    url: Optional[AnyUrl] = Field(None, description='The absolute URL of the resource.')
    valid: Optional[bool] = Field(
        None, description='Boolean if the flow definition is valid.'
    )


class StudioV2FlowTestUser(BaseModel):
    sid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='Unique identifier of the flow.')
    test_users: Optional[List[str]] = Field(
        None,
        description='List of test user identities that can test draft versions of the flow.',
    )
    url: Optional[AnyUrl] = Field(None, description='The URL of this resource.')


class StudioV2FlowValidate(BaseModel):
    valid: Optional[bool] = Field(
        None, description='Boolean if the flow definition is valid.'
    )


class Meta(BaseModel):
    first_page_url: Optional[AnyUrl] = None
    key: Optional[str] = None
    next_page_url: Optional[AnyUrl] = None
    page: Optional[int] = None
    page_size: Optional[int] = None
    previous_page_url: Optional[AnyUrl] = None
    url: Optional[AnyUrl] = None


class V2FlowsGetResponse(BaseModel):
    flows: Optional[List[StudioV2Flow]] = None
    meta: Optional[Meta] = None


class V2FlowsPostRequest(BaseModel):
    CommitMessage: Optional[str] = Field(
        None, description='Description of change made in the revision.'
    )
    Definition: Any = Field(..., description='JSON representation of flow definition.')
    FriendlyName: str = Field(
        ..., description='The string that you assigned to describe the Flow.'
    )
    Status: FlowEnumStatus = Field(
        ..., description='The status of the Flow. Can be: `draft` or `published`.'
    )


class V2FlowsValidatePostRequest(BaseModel):
    CommitMessage: Optional[str] = Field(
        None, description='Description of change made in the revision.'
    )
    Definition: Any = Field(..., description='JSON representation of flow definition.')
    FriendlyName: str = Field(
        ..., description='The string that you assigned to describe the Flow.'
    )
    Status: FlowValidateEnumStatus = Field(
        ..., description='The status of the Flow. Can be: `draft` or `published`.'
    )


class V2FlowsFlowSidExecutionsGetResponse(BaseModel):
    executions: Optional[List[StudioV2FlowExecution]] = None
    meta: Optional[Meta] = None


class V2FlowsFlowSidExecutionsPostRequest(BaseModel):
    From: str = Field(
        ...,
        description="The Twilio phone number to send messages or initiate calls from during the Flow's Execution. Available as variable `{{flow.channel.address}}`. For SMS, this can also be a Messaging Service SID.",
    )
    Parameters: Optional[Any] = Field(
        None,
        description='JSON data that will be added to the Flow\'s context and that can be accessed as variables inside your Flow. For example, if you pass in `Parameters={"name":"Zeke"}`, a widget in your Flow can reference the variable `{{flow.data.name}}`, which returns "Zeke". Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode the JSON string.',
    )
    To: str = Field(
        ...,
        description='The Contact phone number to start a Studio Flow Execution, available as variable `{{contact.channel.address}}`.',
    )


class V2FlowsFlowSidExecutionsExecutionSidStepsGetResponse(BaseModel):
    meta: Optional[Meta] = None
    steps: Optional[List[StudioV2FlowExecutionExecutionStep]] = None


class V2FlowsFlowSidExecutionsSidPostRequest(BaseModel):
    Status: ExecutionEnumStatus = Field(
        ..., description='The status of the Execution. Can only be `ended`.'
    )


class V2FlowsSidPostRequest(BaseModel):
    CommitMessage: Optional[str] = Field(
        None, description='Description of change made in the revision.'
    )
    Definition: Optional[Any] = Field(
        None, description='JSON representation of flow definition.'
    )
    FriendlyName: Optional[str] = Field(
        None, description='The string that you assigned to describe the Flow.'
    )
    Status: FlowEnumStatus = Field(
        ..., description='The status of the Flow. Can be: `draft` or `published`.'
    )


class V2FlowsSidRevisionsGetResponse(BaseModel):
    meta: Optional[Meta] = None
    revisions: Optional[List[StudioV2FlowFlowRevision]] = None


class V2FlowsSidTestUsersPostRequest(BaseModel):
    TestUsers: List[str] = Field(
        ...,
        description='List of test user identities that can test draft versions of the flow.',
    )
